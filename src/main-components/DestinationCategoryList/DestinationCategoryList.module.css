.pageContainer {
  padding: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
  max-width: 1300px; 
  margin: 20px auto; 
  background-color: #f9f9f9; 
}

.pageTitle {
  font-size: 2.8em; 
  color: #2c3e50; 
  text-align: center;
  margin-bottom: 40px; 
  font-weight: 600; 
  letter-spacing: -0.5px;
}


.categoryGrid {
  display: grid;
 
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 30px; 
  list-style: none;
  padding: 0;
}


.noCategoriesText {
  text-align: center;
  font-size: 1.2em;
  color: #7f8c8d;
  padding: 40px 0;
}


.categoryList {
  list-style: none;
  padding: 0;
  margin-top: 30px;
}

.categoryListItem {
  display: flex;
  align-items: center; 
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 3px 10px rgba(0,0,0,0.07);
  margin-bottom: 20px;
  padding: 15px;
  transition: box-shadow 0.3s ease, transform 0.2s ease;
}

.categoryListItem:hover {
  box-shadow: 0 6px 15px rgba(0,0,0,0.12);
  transform: translateY(-3px);
}

.listItemLink { 
  display: flex;
  align-items: center;
  text-decoration: none;
  color: inherit;
  width: 100%;
}

.listItemThumbnail {
  /* Ensure these dimensions match the width/height props in your <Image> component */
  /* Or remove width/height here if next/image handles it well with its props */
  /* width: 100px; */ /* Example, adjust or remove */
  /* height: 100px; */ /* Example, adjust or remove */
  object-fit: cover;
  border-radius: 6px;
  margin-right: 20px;
  flex-shrink: 0; /* Prevent image from shrinking */
}

.listItemContent {
  flex-grow: 1;
}

.listItemName {
  font-size: 1.4em;
  color: #2c3e50;
  margin: 0 0 8px 0;
  font-weight: 600;
}

.listItemDescription {
  font-size: 0.9em;
  color: #555;
  line-height: 1.5;
  margin-bottom: 10px;
  /* Clamp description to a few lines */
  display: -webkit-box;
  -webkit-line-clamp: 2; 
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.listItemViewLink {
  font-size: 0.9em;
  color: #3498db;
  font-weight: bold;
  text-decoration: none;
}
.listItemViewLink:hover {
  text-decoration: underline;
}

/* Styles for the interactive card grid (second list in your JSX) */
.interactiveCard {
  background-color: #fff; /* This might not be visible if image covers it */
  border-radius: 15px;
  box-shadow: 0 8px 25px rgba(0,0,0,0.1);
  overflow: hidden;
  position: relative;
  /* transform-style: preserve-3d; */ /* Uncomment if you implement 3D tilt */
  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 0.4s ease;
  min-height: 350px; /* Ensure cards have some height */
  display: flex;
  flex-direction: column;
}

.interactiveCard:hover {
  box-shadow: 0 20px 50px rgba(0,0,0,0.2);
  transform: translateY(-5px) scale(1.03); 
}

.interactiveLink { 
  display: flex;
  flex-direction: column;
  text-decoration: none;
  color: inherit;
  width: 100%;
  height: 100%;
  padding: 20px; 
  position: relative; /* For z-indexing content above image */
  z-index: 2; /* Ensure link and its content are above the background image */
}

.interactiveImageBg {
  
  z-index: 0; /* Ensure image is behind content */
  transition: transform 0.5s ease, filter 0.5s ease;
  filter: brightness(0.7); /* Initial dimming */
  /* object-fit: cover; is handled by next/image prop */
}

.interactiveCard:hover .interactiveImageBg {
  /* The transform on next/image itself might be tricky if it's a direct child.
     Often, the transform is applied to a wrapper or the card itself.
     If next/image is a direct child, its internal structure might interfere.
     The current JSX structure has <Image> as a direct child of <li>.
     The hover effect on .interactiveImageBg might need to target the Image component's wrapper if direct CSS doesn't work as expected.
     For simplicity, the scale effect is on the card itself in .interactiveCard:hover
  */
  /* transform: scale(1.15); */ /* This might be better on the card or a wrapper */
  filter: brightness(0.5); /* Dim further or change effect */
}

.interactiveContent {
  margin-top: auto; /* Pushes content to the bottom */
  color: #fff; /* Text color for overlay */
  text-shadow: 1px 1px 4px rgba(0,0,0,0.5);
  position: relative; /* Ensure content is above the ::before pseudo-element if one was used on parent */
  z-index: 3; /* Above the link's z-index if needed, or ensure link content is structured well */
}

.interactiveName {
  font-size: 1.8em;
  font-weight: bold;
  margin-bottom: 10px;
}

.interactiveDescription {
  font-size: 0.95em;
  margin-bottom: 15px;
  opacity: 0; /* Initially hidden */
  transform: translateY(10px);
  transition: opacity 0.3s ease 0.1s, transform 0.3s ease 0.1s; /* Delayed transition */
}

.interactiveCard:hover .interactiveDescription {
  opacity: 0.9;
  transform: translateY(0);
}

.interactiveViewText {
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.9em;
  opacity: 0;
  transition: opacity 0.3s ease 0.2s;
}
.interactiveCard:hover .interactiveViewText {
  opacity: 1;
}